{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DrumPad","props","audioRef","useRef","padId","k","Button","id","className","onClick","e","current","play","document","getElementById","innerHTML","textContent","variant","size","src","toLowerCase","ref","description","Message","show","Alert","Heading","App","MAP","useState","setShow","window","onkeydown","audioEl","keyCode","promise","undefined","then","_","parentElement","style","backgroundColor","borderColor","catch","error","console","log","onkeyup","btnEl","Jumbotron","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uPAQA,SAASA,EAAQC,GACf,IAAMC,EAAWC,iBAAO,MAClBC,EAAK,iBAAaH,EAAMI,GAO9B,OACE,eAACC,EAAA,EAAD,CACEC,GAAIH,EACJI,UAAU,gBACVC,QATgB,SAACC,GACnBR,EAASS,QAAQC,OACjBC,SAASC,eAAe,WAAWC,UAAYb,EAASS,QAAQK,aAQ9DC,QAAQ,YACRC,KAAK,KALP,UAOGjB,EAAMI,EACP,uBACEG,UAAU,OACVW,IAAG,gBAAWlB,EAAMI,EAAEe,cAAnB,QACHb,GAAIN,EAAMI,EACVgB,IAAKnB,EAJP,SAKED,EAAMqB,iBAMd,SAASC,EAAQtB,GAEf,IAAMM,EAAKN,EAAMuB,KAAO,OAAS,OACjC,OACE,cAACC,EAAA,EAAD,CAAOR,QAAQ,SAASV,GAAIA,EAAIC,UAAU,UAA1C,SACE,cAACiB,EAAA,EAAMC,QAAP,+BAuFSC,MAjFf,WAEE,IAAMC,EAAM,CACV,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,KAXK,EAcUC,oBAAS,GAdnB,mBAcPL,EAdO,KAcDM,EAdC,KAoDb,OAHAC,OAAOC,UAjCe,SAACtB,GAErB,IAAMuB,EAAUpB,SAASC,eAAec,EAAIlB,EAAEwB,UAE9C,GAAID,EAAS,CACXH,GAAQ,GACR,IAAMK,EAAUF,EAAQrB,YACRwB,IAAZD,GACFA,EACGE,MAAK,SAAAC,GACJzB,SAASC,eAAe,WAAWC,UAAYkB,EAAQjB,YACvDiB,EAAQM,cAAcC,MAAMC,gBAAkB,kBAC9CR,EAAQM,cAAcC,MAAME,YAAc,qBAE3CC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,WAKlBd,GAAQ,IAcZC,OAAOgB,QAVa,SAACrC,GACnB,IAAMuB,EAAUpB,SAASC,eAAec,EAAIlB,EAAEwB,UAC9C,GAAID,EAAS,CACX,IAAMe,EAAQf,EAAQM,cACtBS,EAAMR,MAAMC,gBAAkB,UAC9BO,EAAMR,MAAME,YAAc,YAQ9B,gCACE,cAACnB,EAAD,CAASC,KAAMA,IACf,eAACyB,EAAA,EAAD,CAAW1C,GAAG,eAAd,UACE,eAAC2C,EAAA,EAAD,CAAW3C,GAAG,cAAd,UACE,gCACE,cAACP,EAAD,CAASK,EAAE,IAAIiB,YAAY,UAC3B,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,aAC3B,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,iBAE7B,gCACE,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,OAC3B,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,SAC3B,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,UAE7B,gCACE,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,OAC3B,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,OAC3B,cAACtB,EAAD,CAASK,EAAE,IAAIiB,YAAY,gBAG/B,cAAC4B,EAAA,EAAD,CAAW3C,GAAG,UAAd,0BC7GS4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASC,eAAe,SAM1BqC,M","file":"static/js/main.cba42ec2.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useRef, useState } from 'react'\nimport './App.scss'\n\nfunction DrumPad(props) {\n  const audioRef = useRef(null);\n  const padId = `button-${props.k}`\n\n  const handleClick = (e) => {\n    audioRef.current.play()\n    document.getElementById('display').innerHTML = audioRef.current.textContent\n  }\n  \n  return (\n    <Button \n      id={padId}\n      className=\"drum-pad mr-2\" \n      onClick={handleClick}\n      variant=\"secondary\"\n      size=\"lg\"\n    >\n      {props.k}\n      <audio \n        className=\"clip\" \n        src={`audio/${props.k.toLowerCase()}.wav`}\n        id={props.k}\n        ref={audioRef}\n      >{props.description}\n      </audio>\n    </Button>\n  )\n}\n\nfunction Message(props) {\n\n  const id = props.show ? 'show' : 'hide'\n  return (\n    <Alert variant=\"danger\" id={id} className=\"message\">\n      <Alert.Heading>qweasdzxc only</Alert.Heading>\n    </Alert>\n  )    \n\n}\n\nfunction App() {\n\n  const MAP = {\n    '81': 'Q',  \n    '87': 'W',\n    '69': 'E',\n    '65': 'A',\n    '83': 'S',\n    '68': 'D',\n    '90': 'Z',\n    '88': 'X',\n    '67': 'C'\n }\n \n const [show, setShow] = useState(false)\n\n  const handleKeyDown = (e) => {\n\n    const audioEl = document.getElementById(MAP[e.keyCode])\n    \n    if (audioEl) {\n      setShow(false)\n      const promise = audioEl.play()\n      if (promise !== undefined) {\n        promise\n          .then(_ => {\n            document.getElementById(\"display\").innerHTML = audioEl.textContent\n            audioEl.parentElement.style.backgroundColor = 'rgb(67, 87, 87)'\n            audioEl.parentElement.style.borderColor = 'rgb(67, 87, 87)'\n          })\n          .catch(error => {\n            console.log(error)\n          })\n      }\n    } \n    else {      \n      setShow(true)\n    }\n  }\n\n  const handleKeyUp = (e) => {\n    const audioEl = document.getElementById(MAP[e.keyCode])\n    if (audioEl) {\n      const btnEl = audioEl.parentElement\n      btnEl.style.backgroundColor = \"#6c757d\"\n      btnEl.style.borderColor = \"#6c757d\"\n    }\n  }\n\n  window.onkeydown = handleKeyDown\n  window.onkeyup =  handleKeyUp\n  \n  return (\n  <div>\n    <Message show={show}/>\n    <Jumbotron id=\"drum-machine\">\n      <Container id=\"pad-wrapper\">\n        <div>\n          <DrumPad k=\"Q\" description=\"Crash\"/>\n          <DrumPad k=\"W\" description=\"Hh Close\"/>\n          <DrumPad k=\"E\" description=\"Low Conga\"/>\n        </div>\n        <div>\n          <DrumPad k=\"A\" description=\"Bd\"/> \n          <DrumPad k=\"S\" description=\"Clap\"/> \n          <DrumPad k=\"D\" description=\"Ho\"/> \n        </div>\n        <div>\n          <DrumPad k=\"Z\" description=\"Ma\"/> \n          <DrumPad k=\"X\" description=\"Sd\"/> \n          <DrumPad k=\"C\" description=\"Bongo\"/>  \n        </div>\n      </Container>\n      <Container id=\"display\">\n        Crash\n      </Container>\n    </Jumbotron>\n  </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}